' =========================================================================
'
'   File...... <filename>
'   Purpose...
'   Author....
'   E-mail....
'   Created... <date> - Generated by Vixen Prop-1 Sequencer Plug-in
'   Updated...
'
'   {$STAMP BS1}
'   {$PBASIC 1.0}
'
' =========================================================================


' -----[ Program Description ]---------------------------------------------
'
' Triggered, table-drive sequencer capable of driving six control outputs.
' P6 is used as the trigger input, P7 is used for audio start when that
' option has been enabled.
'
' Note: When using the AP-8 you must replace ULN2803 with ULN2003 for
'       audio start on P7.


' -----[ Revision History ]------------------------------------------------


' -----[ I/O Definitions ]-------------------------------------------------

SYMBOL  AudioStart      = 7                     ' SETUP = out
SYMBOL  Trigger         = PIN6                  ' SETUP = DN


' -----[ Constants ]-------------------------------------------------------

SYMBOL  IsActive        = <active>
SYMBOL  IsNotActive     = <not_active>

SYMBOL  IsOn            = 1
SYMBOL  IsOff           = 0

SYMBOL  Started         = 1
SYMBOL  NotStarted      = 0

SYMBOL  EventDelay      = <event_period>


' -----[ Variables ]-------------------------------------------------------

SYMBOL  showBits        = B0                    ' output + control bits
SYMBOL  endOfShow       = BIT7                  ' 1 = stop when timer done

SYMBOL  pntr            = B2                    ' step pointer
SYMBOL  tix             = B3                    ' hold timing


' -----[ Initialization ]--------------------------------------------------

Reset:
  PINS = %00000000                              ' clear pins
  DIRS = %00111111                              ' P0..P5 are outputs

Audio_Reset:
<reset_audio>


' -----[ Program Code ]----------------------------------------------------

Main:
  pntr = 0                                      ' point to start of show
  IF Trigger = IsNotActive THEN Main            ' wait for trigger

Start_Audio:
<audio_play>

Play_Show:
  READ pntr, showBits                           ' get step
  PINS = showBits & %00111111                   ' update outputs
  pntr = pntr + 1                               '   point to timing
  READ pntr, tix                                '   read it
  pntr = pntr + 1                               ' point to next step

Timer:
  IF tix = 0 THEN Next_Step                     ' timer expired?
    PAUSE EventDelay                            ' no, time on "tic"
    tix = tix - 1                               ' decrement timer
    GOTO Timer                                  ' check again

Next_Step:
  IF endofShow = IsOn THEN Reset                ' done?
    GOTO Play_Show                              ' keep going


' -----[ Subroutines ]-----------------------------------------------------


' -----[ EEPROM Data ]-----------------------------------------------------

Show_Data:
'          +------------ end of show bit
'          |
'          | +---------- OUT5
'          | |+--------- OUT4
'          | ||+-------- OUT3
'          | |||+------- OUT2
'          | ||||+------ OUT1
'          | |||||+----- OUT0
'          | ||||||
'          | ||||||  +-- timing multiplier (1 to 255)
'          | ||||||  |
<events_table>