' =========================================================================
'
'   File...... <filename>
'   Purpose...
'   Author....
'   E-mail....
'   Created... <date> - Generated by Vixen Prop-2 Sequencer Plug-in
'   Updated...
'
'   {$STAMP BS2}
'   {$PBASIC 2.5}
'
' =========================================================================


' -----[ Program Description ]---------------------------------------------
'
' Triggered, table-drive sequencer capable of driving 14 control outputs.
' P14 is used as the trigger input, P15 is used for audio start when that
' option has been enabled.
'
' Note: When using the AP-8 you must replace ULN2803 with ULN2003 for
'       audio start on P15.
'
' Setup Jumpers:
'   -- P15 :: out
'   -- P14 :: DN for active-high; UP for active-low trigger
'   -- P13 :: out
'   -- P12 :: out


' -----[ Revision History ]------------------------------------------------


' -----[ I/O Definitions ]-------------------------------------------------

AudioStart      PIN     15                      ' SETUP = out
Trigger         PIN     14


' -----[ Constants ]-------------------------------------------------------

T2400           CON     396
T9600           CON     84
T38K4           CON     6

Inverted        CON     $4000
Open            CON     $8000
Baud            CON     Open | T38K4            ' fast baud for accessories


IsActive        CON     <active>
IsNotActive     CON     <not_active>

IsOn            CON     1
IsOff           CON     0

EventDelay      CON     <event_period>


' -----[ Variables ]-------------------------------------------------------

showBits        VAR     Word                    ' output + control bits
endOfShow       VAR     showBits.BIT15          ' 1 = stop when timer done

record          VAR     Word                    ' current sequence record
tix             VAR     Byte                    ' timing for record


' -----[ Initialization ]--------------------------------------------------

Reset:
  OUTS = $0000                                  ' clear pins
  DIRS = $3FFF                                  ' P0..P13 are outputs

Audio_Reset:
<reset_audio>

' -----[ Program Code ]----------------------------------------------------

Main:
  record = 0                                    ' point to start of show
  IF (Trigger = IsNotActive) THEN Main          ' wait for trigger

Start_Audio:
<audio_play>

Play_Show:
  READ (record * 3), Word showBits, tix         ' get outputs & timing
  OUTS = showBits & $3FFF                       ' update outputs

Timer:
  IF tix = 0 THEN Next_Step                     ' timer expired?
    PAUSE EventDelay                            '   no, time one "tic"
    tix = tix - 1                               '   decrement timer
    GOTO Timer                                  '   check again

Next_Step:
  IF (endOfShow = IsOn) THEN Reset              ' done?
    record = record + 1                         '   no, point to next
    GOTO Play_Show                              '   and keep going


' -----[ Subroutines ]-----------------------------------------------------


' -----[ EEPROM Data ]-----------------------------------------------------

Show_Data:
'             +-------------------- end of show bit
'             |
'             | +------------------ OUT14
'             | |
'             | |            +----- OUT0
'             | |            |
'             | |            |  +-- timing multiplier (1 to 255)
'             | |            |  |
<events_table>